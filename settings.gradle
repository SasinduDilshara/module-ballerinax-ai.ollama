/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.3/userguide/building_swift_projects.html in the Gradle documentation.
 */

pluginManagement {
    plugins {
        id "com.github.spotbugs-base" version "${spotbugsPluginVersion}"
        id "com.github.johnrengelman.shadow" version "${shadowJarPluginVersion}"
        id "de.undercouch.download" version "${downloadPluginVersion}"
        id "net.researchgate.release" version "${releasePluginVersion}"
        id "io.ballerina.plugin" version "${ballerinaGradlePluginVersion}"
    }

    repositories {
        gradlePluginPortal()
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/*'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }
}

plugins {
    id "com.gradle.enterprise" version "3.2"
}

rootProject.name = 'module-ballerinax-ai.model.provider.ollama'

include ':checkstyle'
include ':ai.model.provider.ollama-native'
include ':ai.model.provider.ollama-ballerina'
include ':ai.model.provider.ollama-compiler-plugin'

project(':checkstyle').projectDir = file("build-config${File.separator}checkstyle")
project(':ai.model.provider.ollama-native').projectDir = file("native")
project(':ai.model.provider.ollama-ballerina').projectDir = file("ballerina")
project(':ai.model.provider.ollama-compiler-plugin').projectDir = file('compiler-plugin')

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
